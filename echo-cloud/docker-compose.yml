version: "3"

services:

  # ECHO SYSTEMS

  echo-provider.local:
    container_name: echo-provider.local
    build: sys-provider
    volumes:
      - ./config/crypto/system.echo_provider.p12:/opt/keystore.p12
      - ./config/crypto/truststore.p12:/opt/truststore.p12
      - ../scripts/wait-for.sh:/opt/wait-for.sh
    ports:
      - 9001:9001
    command: ["/bin/bash", "-c", "cd /opt && ./wait-for.sh echo-config.local 9999 5 && \
      java -XX:+UseSerialGC -Xmx1G -Xms32m -cp app.jar se.arkalix.examples.EchoProvider keystore.p12 truststore.p12 service-registry.local 8443"]

  echo-consumer.local:
    container_name: echo-consumer.local
    build: sys-consumer
    volumes:
      - ./config/crypto/system.echo_consumer.p12:/opt/keystore.p12
      - ./config/crypto/truststore.p12:/opt/truststore.p12
      - ../scripts/wait-for.sh:/opt/wait-for.sh
    ports:
      - 9002:9002
    command: ["/bin/bash", "-c", "cd /opt && ./wait-for.sh echo-provider.local 9001 5 && \
      java -XX:+UseSerialGC -Xmx1G -Xms32m -cp app.jar se.arkalix.examples.EchoConsumer keystore.p12 truststore.p12 service-registry.local 8443"]

  # CLOUD SETUP/CONFIGURATION SYSTEM
  
  echo-config.local:
    container_name: echo-config.local
    build: sys-config
    volumes:
      - ./config/crypto/sysop.p12:/opt/keystore.p12
      - ./config/crypto/truststore.p12:/opt/truststore.p12
      - ./config/sys-config.json:/opt/config.json
      - ../scripts/wait-for.sh:/opt/wait-for.sh
    ports:
      - 9999:9999
    command: ["/bin/bash", "-c", "cd /opt && ./wait-for.sh orchestrator.local 8441 3 && java -XX:+UseSerialGC -Xmx1G -Xms32m -jar app.jar"]

  # CORE SYSTEMS

  service-registry.local:
    container_name: service-registry.local
    image: svetlint/serviceregistry:4.3.0
    depends_on:
      - mysql.local
    volumes:
      - ./config/crypto/system.service_registry.p12:/serviceregistry/keystore.p12
      - ./config/crypto/truststore.p12:/serviceregistry/truststore.p12
      - ./config/properties/service_registry.properties:/serviceregistry/application.properties
      - ../scripts/wait-for.sh:/serviceregistry/wait-for.sh
    ports:
      - 8443:8443
    command: ["/bin/bash", "-c", "cd /serviceregistry && ./wait-for.sh mysql.local 3306 0 && \
      java -XX:+UseSerialGC -Xmx1G -Xms32m -jar arrowhead-serviceregistry.jar --spring.config.location=application.properties"]

  authorization.local:
    container_name: authorization.local
    image: svetlint/authorization:4.3.0
    depends_on:
      - mysql.local
    volumes:
      - ./config/crypto/system.authorization.p12:/authorization/keystore.p12
      - ./config/crypto/truststore.p12:/authorization/truststore.p12
      - ./config/properties/authorization.properties:/authorization/application.properties
      - ../scripts/wait-for.sh:/authorization/wait-for.sh
    ports:
      - 8445:8445
    command: ["/bin/bash", "-c", "cd /authorization && ./wait-for.sh service-registry.local 8443 1 && \
      java -XX:+UseSerialGC -Xmx1G -Xms32m -jar arrowhead-authorization.jar --spring.config.location=application.properties"]

  orchestrator.local:
    container_name: orchestrator.local
    image: svetlint/orchestrator:4.3.0
    depends_on:
      - mysql.local
    volumes:
      - ./config/crypto/system.orchestrator.p12:/orchestrator/keystore.p12
      - ./config/crypto/truststore.p12:/orchestrator/truststore.p12
      - ./config/properties/orchestrator.properties:/orchestrator/application.properties
      - ../scripts/wait-for.sh:/orchestrator/wait-for.sh
    ports:
      - 8441:8441
    command: ["/bin/bash", "-c", "cd /orchestrator && ./wait-for.sh authorization.local 8445 1 && \
      java -XX:+UseSerialGC -Xmx1G -Xms32m -jar arrowhead-orchestrator.jar --spring.config.location=application.properties"]

  # DATABASE USED BY CORE SYSTEMS

  mysql.local:
    container_name: mysql.local
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      #- vol.mysql.local:/var/lib/mysql # Uncomment this line and the `volumes` section below to make the database persist between runs.
      - ../scripts/aitia-core.sql:/docker-entrypoint-initdb.d/aitia-core.sql

#volumes:
#  vol.mysql.local:
#    external: false
